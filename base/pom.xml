<?xml version="1.0" encoding="UTF-8"?>
<!--~
  ~ Copyright 2017 Confluent Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>common-docker</artifactId>
        <version>7.0.1</version>
    </parent>

    <packaging>pom</packaging>

    <artifactId>cp-base-new</artifactId>

    <description>Base for Confluent Docker images</description>
    <name>${project.artifactId}</name>

    <properties>
        <docker.skip-build>false</docker.skip-build>
        <docker.skip-test>false</docker.skip-test>
        <docker.pull-image>true</docker.pull-image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>utility-belt</artifactId>
            <version>${io.confluent.common-docker.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Operator dependencies for metrics integration -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-jvm</artifactId>
            <version>${jolokia-jvm.version}</version>
            <classifier>agent</classifier>
        </dependency>

        <dependency>
            <groupId>io.prometheus.jmx</groupId>
            <artifactId>jmx_prometheus_javaagent</artifactId>
            <version>${jmx_prometheus_javaagent.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>disk-usage-agent</artifactId>
            <version>${io.confluent.common.version}</version>
        </dependency>
    </dependencies>

      <!-- This jar is only used by the deb8 base image and does not get added to the other images. -->
      <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../docker-utils/target</directory>
                                    <includes>
                                        <include>docker-utils-${CONFLUENT_VERSION}-jar-with-dependencies.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>build</argument>
                                <argument>-f</argument>
                                <argument>Dockerfile.ubi8</argument>
                                <argument>--build-arg</argument>
                                <argument>UBI_MINIMAL_VERSION=${ubi.image.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>OPENSSL_VERSION=${ubi.openssl.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>WGET_VERSION=${ubi.wget.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>NETCAT_VERSION=${ubi.netcat.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>PYTHON36_VERSION=${ubi.python36.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>TAR_VERSION=${ubi.tar.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>PROCPS_VERSION=${ubi.procps.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>KRB5_WORKSTATION_VERSION=${ubi.krb5.workstation.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>IPUTILS_VERSION=${ubi.iputils.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>HOSTNAME_VERSION=${ubi.hostname.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>ZULU_OPENJDK_VERSION=${ubi.zulu.openjdk.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>PYTHON_PIP_VERSION=${ubi.python.pip.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>PYTHON_SETUPTOOLS_VERSION=${ubi.python.setuptools.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>PYTHON_CONFLUENT_DOCKER_UTILS_VERSION=${ubi.python.confluent.docker.utils.version}</argument>
                                <argument>--build-arg</argument>
                                <argument>SKIP_SECURITY_UPDATE_CHECK=${docker.skip-security-update-check}</argument>
                                <argument>--build-arg</argument>
                                <argument>ARTIFACT_ID=${project.artifactId}</argument>
                                <argument>--build-arg</argument>
                                <argument>PROJECT_VERSION=${project.version}</argument>
                                <argument>-t</argument>
                                <argument>${docker.registry}confluentinc/${project.artifactId}:${docker.tag}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
